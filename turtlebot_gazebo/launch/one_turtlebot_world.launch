<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="gui"        default="false"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->
  <arg name="robot_name" value="robot1"/>
  	
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>
<group ns="$(arg robot_name)">
  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="init_pose" value=" "/>	 
     </include>

  <node pkg="adding_fixed_tf_gazebo" type="adding_fixed_tf_gazebo_node" name="br_tf" >
		<param name="robot_name" type="string" value="$(arg robot_name)"/>	
		<param name="odom_tf_name" type="string" value="$(arg robot_name)/odom"/>
		<param name="fixed_tf_name" type="string" value="/map"/>	
   </node>


  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" value="$(arg robot_name)"/>
  </node>
  
  
   <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
    <remap from="odom" to="odom" />
    <remap from="cmd_vel" to="cmd_vel" />
    <remap from="map" to="/projected_map" />
    <remap from="move_base" to="move_base_node" />
    <param name="~/global_costmap/robot_base_frame" value="$(arg robot_name)/base_link" />
      <param name="~/global_costmap/global_frame" value="/map" />
      <param name="~/global_costmap/static_map" value="true" />
   
    <param name="~/local_costmap/robot_base_frame" value="$(arg robot_name)/base_link" />
    <param name="~/local_costmap/global_frame" value="/map" />
    <param name="~/local_costmap/static_map" value="true" />
	</node>


	<node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
	<param name="robot_base_frame" value="$(arg robot_name)/base_link"/>
	<param name="costmap_topic" value="/projected_map"/>
	<param name="visualize" value="true"/>
	  <param name="planner_frequency" value="0.33"/>
  <param name="progress_timeout" value="30.0"/>
  <param name="potential_scale" value="3.0"/>
  <param name="orientation_scale" value="0.0"/>
  <param name="gain_scale" value="1.0"/>
  <param name="transform_tolerance" value="0.3"/>
  <param name="min_frontier_size" value="0.3"/>
    <remap from="move_base" to="move_base_node"/>
	</node>


  </group>
  
   <!--octomap server -->
 <node pkg="octomap_server" type="octomap_tracking_server_node" name="octomap_talker" output="screen">	
 		
 		<param name="resolution" value="0.02" />
		<param name="frame_id" type="string" value="/map" />
		<param name="sensor_model/max_range" value="3.0" />
		<param name="track_changes" value="true"/>
		<param name="listen_changes" value="false"/>
		<param name="topic_changes" value="/octomap_tracking_server/changeset" />
		<param name="sensor_model/hit" value=" " />	
		<param name="sensor_model/miss" value=" " />	
		<param name="sensor_model/min" value=" " />	
		<param name="sensor_model/max" value=" " />
		<param name="filter_ground" value="true"/>
		<param name="base_frame_id" value="$(arg robot_name)/base_footprint"/>

    <param name="change_id_frame" value=" " />
    <remap from="cloud_in" to="$(arg robot_name)/camera/depth/points" />
 
 </node>
  
     <!--rviz-->
   <node name="rviz" pkg="rviz" type="rviz" args="args=-d $(find turtlebot_gazebo)/rviz/one_turtlebot_bringingup.rviz"/>
  

	<!-- exploration -->
	

</launch>

