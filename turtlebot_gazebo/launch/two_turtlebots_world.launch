<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="gui"        default="false"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/> 
   <!-- kinect, asus_xtion_pro -->
   <!-- robot name -->
  <arg name="robot1_name" value ="robot1"/>
  <arg name="robot2_name" value ="robot2"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(find turtlebot_gazebo)/worlds/playground.world"/>
 	
 </include>


<group ns="$(arg robot1_name)">

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="init_pose" value="-x -1.5" />
    <arg name="robot_name" value="$(arg robot1_name)"/>	
  </include>
  
  <node pkg="adding_fixed_tf_gazebo" type="adding_fixed_tf_gazebo_node" name="br_tf" >
		<param name="robot_name" type="string" value="$(arg robot1_name)"/>	
		<param name="odom_tf_name" type="string" value="$(arg robot1_name)/odom"/>
		<param name="fixed_tf_name" type="string" value="map"/>	
	</node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" value="$(arg robot1_name)"/>
  </node>



  <!--camera depth msg 2 laser scan and this is used in gmapping-->
  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depth2laser">
  	<param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg robot1_name)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="camera_info" to="camera/depth/camera_info"/>
    <!--careful!! remapping to /scan makes itself as global!!-->
    <!--You know,... but now I need that!!-->
	<remap from="scan" to="/scan"/>
  </node>

</group>

<group ns="$(arg robot2_name)">

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="robot_name" value="$(arg robot2_name)"/>	
    <arg name="init_pose" value=" " />
  </include>
  
   <node pkg="adding_fixed_tf_gazebo" type="adding_fixed_tf_gazebo_node" name="br_tf" >
		<param name="robot_name" type="string" value="$(arg robot2_name)"/>	
		<param name="odom_tf_name" type="string" value="$(arg robot2_name)/odom"/>
		<param name="fixed_tf_name" type="string" value="map"/>	
	</node>

 
  
 <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" value="$(arg robot2_name)"/>
  </node>

  <!-- Fake laser -->

  <!--camera depth msg 2 laser scan and this is used in gmapping-->
  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depth2laser">
  	<param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg robot2_name)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="camera_info" to="camera/depth/camera_info"/>
    <!--careful!! remapping to /scan makes itself as global!!-->
    <remap from="scan" to="/scan"/>
  </node>
  </group>

 <!-- laser scan data merger -->
  <!--node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler">
   <remap from="scan" to="scan"/>
   <param name="max_scans" type="int" value="400" />
   <param name="fixed_frame" type="string" value="/map" />
</node>
   <node type="periodic_snapshotter" pkg="laser_assembler" name="periodic_service_caller">
   <param name="buffer_duration_sec" type="int" value="2"/>
   <param name="buffer_duration_nsec" type="int" value="0"/>
   </node-->

 <!--point cloud merger-->
 <node type="pcl2_merger_node" pkg="pcl2_merger" name="pcl2_merger" />

 <!--octomap server -->
 <node pkg="octomap_server" type="octomap_tracking_server_node" name="octomap_talker" output="screen">	
 		
 		<param name="resolution" value="0.05" />
		<param name="frame_id" type="string" value="/map" />
		<param name="sensor_model/max_range" value="3.0" />
		<param name="track_changes" value="true"/>
		<param name="listen_changes" value="false"/>
		<param name="topic_changes" value="/octomap_tracking_server/changeset" />
		<param name="sensor_model/hit" value=" " />	
		<param name="sensor_model/miss" value=" " />	
		<param name="sensor_model/min" value=" " />	
		<param name="sensor_model/max" value=" " />


    <param name="change_id_frame" value=" " />
    <remap from="cloud_in" to="/merged_points" />
 
 </node>
 
   <!--rviz-->
   <node name="rviz" pkg="rviz" type="rviz" args="args=-d $(find turtlebot_gazebo)/rviz/two_turtlebot_bringingup.rviz"/>
 

</launch>

